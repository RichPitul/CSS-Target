@mixin transition($transition...) {
  -moz-transition: $transition;
  -o-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}
@mixin grayscale($percent) {
  -webkit-filter: grayscale($percent);
  filter: grayscale($percent);
}
@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
  -webkit-box-shadow: $top $left $blur $spread $color;
  -moz-box-shadow: $top $left $blur $spread $color;
  box-shadow: $top $left $blur $spread $color;
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
@mixin linear-gradient($color1, $color2) {
  background: $color1;
  background: -webkit-linear-gradient($color1, $color2);
  background: -o-linear-gradient($color1, $color2);
  background: -moz-linear-gradient($color1, $color2);
  background: linear-gradient($color1, $color2);
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
@mixin background-color($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
}
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}
@mixin linear-gradient-multi($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(
    legacy-direction($direction),
    $color-stops
  );
  background: linear-gradient($direction, $color-stops);
}
@mixin font-face($font-family) {
  font-family: $font-family;
  src: url('../fonts/#{$font-family}.eot');
  src: url('../fonts/#{$font-family}.eot?#iefix') format('embedded-opentype'),
    url('../fonts/#{$font-family}.svg#fonts/#{$font-family}') format('svg'),
    url('../fonts/#{$font-family}.ttf') format('truetype'),
    url('../fonts/#{$font-family}.woff') format('woff'),
    url('../fonts/#{$font-family}.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
}
@mixin filter($filter) {
  -webkit-filter: unquote($filter);
  -moz-filter: unquote($filter);
  -ms-filter: unquote($filter);
  -o-filter: unquote($filter);
  filter: unquote($filter);
}
@mixin hand-cursor {
  cursor: hand;
  cursor: pointer;
}

@mixin fillWindow {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
}
@mixin fillViewport {
  position: absolute;
  top: 0;
  width: 100vw;
  height: 100vh;
}
